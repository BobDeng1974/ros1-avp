<?xml version="1.0"?>
<launch>
  <!-- Remove ground plane -->
  <arg name="input_point_topic" default="/points_raw" /> <!-- input_point_topic, ground filtering will be performed over the pointcloud in this topic. -->
  <arg name="sensor_height" default="1.7" /><!--  Height of the sensor from the ground -->
  <arg name="clipping_height" default="2.0" /><!-- Remove Points above this height value (default 0.2 meters) -->
  <arg name="min_point_distance" default="0.2" /><!-- Removes Points closer than this distance from the sensor origin (default 1.85 meters) -->
  <arg name="radial_divider_angle" default="0.08" /><!-- Angle of each Radial division on the XY Plane (default 0.08 degrees)-->
  <arg name="concentric_divider_distance" default="0.01" /><!-- Distance of each concentric division on the XY Plane (default 0.01 meters) -->
  <arg name="local_max_slope" default="8" /><!-- Max Slope of the ground between Points (default 8 degrees) -->
  <arg name="general_max_slope" default="5" /><!-- Max Slope of the ground in the entire PointCloud, used when reclassification occurs (default 5 degrees)-->
  <arg name="min_height_threshold" default="0.5" /><!-- Minimum height threshold between points (default 0.05 meters)-->
  <arg name="reclass_distance_threshold" default="0.2" /><!-- Distance between points at which re classification will occur (default 0.2 meters)-->
  <arg name="no_ground_point_topic" default="/points_no_ground" />
  <arg name="ground_point_topic" default="/points_ground" />
  <include file="$(find points_preprocessor)/launch/ray_ground_filter.launch">
    <arg name="input_point_topic" value="$(arg input_point_topic)" />
    <arg name="sensor_height" value="$(arg sensor_height)" />
    <arg name="clipping_height" value="$(arg clipping_height)" />
    <arg name="min_point_distance" value="$(arg min_point_distance)" />
    <arg name="radial_divider_angle" value="$(arg radial_divider_angle)" />
    <arg name="concentric_divider_distance" value="$(arg concentric_divider_distance)" />
    <arg name="local_max_slope" value="$(arg local_max_slope)" />
    <arg name="general_max_slope" value="$(arg general_max_slope)" />
    <arg name="min_height_threshold" value="$(arg min_height_threshold)" />
    <arg name="reclass_distance_threshold" value="$(arg reclass_distance_threshold)" />
    <arg name="no_ground_point_topic" value="$(arg no_ground_point_topic)" />
    <arg name="ground_point_topic" value="$(arg ground_point_topic)" />
  </include>

  <!-- Compute costmap -->
  <arg name="grid_resolution" default="0.1" />
  <arg name="grid_length_x" default="50" />
  <arg name="grid_length_y" default="30" />
  <arg name="grid_position_x" default="0" />
  <arg name="grid_position_y" default="0" />
  <include file="$(find costmap_generator)/launch/costmap_generator.launch">
    <arg name="grid_resolution" value="$(arg grid_resolution)" />
    <arg name="grid_length_x" value="$(arg grid_length_x)" />
    <arg name="grid_length_y" value="$(arg grid_length_y)" />
    <arg name="grid_position_x" value="$(arg grid_position_x)" />
    <arg name="grid_position_y" value="$(arg grid_position_y)" />
    <arg name="use_wayarea" value="false"/>
  </include>

  <!-- Lidar safety cage -->
  <node pkg="lidar_alarm" type="lidar_alarm.py" name="lidar_alarm_node" output="screen"/>

</launch>
